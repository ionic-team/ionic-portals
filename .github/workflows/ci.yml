name: CI

# on:
#   push:
#     branches:
#       - '**'
#   pull_request:
#     branches:
#       - '**'
on: workflow_dispatch
jobs:
  # setup:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 30
  #   steps:
  #     - name: Cancel Previous Runs
  #       uses: styfle/cancel-workflow-action@ce177499ccf9fd2aded3b0426c97e5434c2e8a73
  #       with:
  #         access_token: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Get Latest
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 14.x
  #     - uses: actions/checkout@v2
  #     - name: Restore Dependency Cache
  #       uses: actions/cache@v1
  #       with:
  #         path: ~/.npm
  #         key: ${{ runner.OS }}-dependency-cache-${{ hashFiles('**/package.json') }}
  #     - name: Get Package Version
  #       id: package-version
  #       uses: martinbeentjes/npm-get-version-action@master
  #       with:
  #         path: core/
  # verify-plugin:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 30
  #   needs:
  #     - setup
  #   steps:
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: 14.x
  #     - uses: actions/checkout@v2
  #     - name: Restore Dependency Cache
  #       uses: actions/cache@v1
  #       with:
  #         path: ~/.npm
  #         key: ${{ runner.OS }}-dependency-cache-${{ hashFiles('**/package.json') }}
  #     - run: npm ci
  #     - run: npm run build
  #       working-directory: ./plugin
  # # verify-android:
  # #   runs-on: ubuntu-latest
  # #   timeout-minutes: 30
  # #   needs:
  # #     - setup
  # #   steps:
  #     # do androidy things
  # verify-ios:
  #   runs-on: macos-latest
  #   timeout-minutes: 30
  #   needs:
  #     - setup
  #   steps:
  #     - run: sudo xcode-select --switch /Applications/Xcode_12.4.app
  #     - uses: actions/checkout@v2
  #     - name: Install Cocoapods
  #       run: gem install cocoapods
  #     - run: pod install
  #       working-directory: ./ios
  #     - run: npm run verify
  #       working-directory: ./ios
  # publish-plugin:
  #   runs-on: ubuntu-latest
  #   # if: github.event_name == 'push' && github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'Release') && (!contains(github.event.head_commit.message, 'rc') && !contains(github.event.head_commit.message, 'beta') && !contains(github.event.head_commit.message, 'alpha'))
  #   timeout-minutes: 30
  #   needs:
  #     - setup
  #     - verify-plugin
  #     - verify-ios
  #     # - verify-android
  #   steps:
  #     - run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: 14.x
  #     - uses: actions/checkout@v2
  #     - name: Restore Dependency Cache
  #       uses: actions/cache@v1
  #       with:
  #         path: ~/.npm
  #         key: ${{ runner.OS }}-dependency-cache-${{ hashFiles('**/package.json') }}
  #     - run: npm ci
  #     - run: npm run lerna:publish:latest || true
  publish-ios:
    runs-on: macos-11
    # if: github.event_name == 'push' && github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'Release') && (!contains(github.event.head_commit.message, 'rc') && !contains(github.event.head_commit.message, 'beta') && !contains(github.event.head_commit.message, 'alpha'))
    timeout-minutes: 30
    # needs:
    #     - setup
    #     - publish-plugin
    steps:
      - run: sudo xcode-select --switch /Applications/Xcode_12.5.app
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/checkout@v2
        with:
          ref: automated-build
      - name: Install Cocoapods
        run: gem install cocoapods
      - name: Deploy to Cocoapods
        run: |
          set -eo pipefail
          pod trunk push ./ios/IonicPortals.podspec --allow-warnings
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
  # publish-android:
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'Release') && (!contains(github.event.head_commit.message, 'rc') && !contains(github.event.head_commit.message, 'beta') && !contains(github.event.head_commit.message, 'alpha'))
  #   timeout-minutes: 30
  #   needs:
        # - publish-plugin
        # - publish-ios
  #   permissions:
  #     contents: read
  #     packages: write
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         ref: native-publish
  #     - name: set up JDK 11
  #       uses: actions/setup-java@v2
  #       with:
  #         java-version: '11'
  #         distribution: 'adopt'
  #     - name: Grant execute permission for gradlew
  #       run: chmod +x ./android/gradlew
  #     - name: Grant execute permission for publishing script
  #       run: chmod +x ./scripts/publish-android.sh
  #     - name: Run publish script
  #       working-directory: ./scripts
  #       env:
  #         ANDROID_OSSRH_USERNAME: ${{ secrets.ANDROID_OSSRH_USERNAME }}
  #         ANDROID_OSSRH_PASSWORD: ${{ secrets.ANDROID_OSSRH_PASSWORD }}
  #         ANDROID_SIGNING_KEY_ID: ${{ secrets.ANDROID_SIGNING_KEY_ID }}
  #         ANDROID_SIGNING_PASSWORD: ${{ secrets.ANDROID_SIGNING_PASSWORD }}
  #         ANDROID_SIGNING_KEY: ${{ secrets.ANDROID_SIGNING_KEY }}
  #         ANDROID_SONATYPE_STAGING_PROFILE_ID: ${{ secrets.ANDROID_SONATYPE_STAGING_PROFILE_ID }}
  #       run: ./publish-android.sh
